/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.3.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ESI.Client;
using ESI.Api;
using ESI.Model;

namespace ESI.Test
{
    /// <summary>
    ///  Class for testing CharacterApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CharacterApiTests
    {
        private CharacterApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CharacterApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CharacterApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CharacterApi
            //Assert.IsInstanceOfType(typeof(CharacterApi), instance, "instance is a CharacterApi");
        }

        
        /// <summary>
        /// Test GetCharactersCharacterId
        /// </summary>
        [Test]
        public void GetCharactersCharacterIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? characterId = null;
            //string datasource = null;
            //var response = instance.GetCharactersCharacterId(characterId, datasource);
            //Assert.IsInstanceOf<GetCharactersCharacterIdOk> (response, "response is GetCharactersCharacterIdOk");
        }
        
        /// <summary>
        /// Test GetCharactersCharacterIdCorporationhistory
        /// </summary>
        [Test]
        public void GetCharactersCharacterIdCorporationhistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? characterId = null;
            //string datasource = null;
            //var response = instance.GetCharactersCharacterIdCorporationhistory(characterId, datasource);
            //Assert.IsInstanceOf<List<GetCharactersCharacterIdCorporationhistory200Ok>> (response, "response is List<GetCharactersCharacterIdCorporationhistory200Ok>");
        }
        
        /// <summary>
        /// Test GetCharactersCharacterIdPortrait
        /// </summary>
        [Test]
        public void GetCharactersCharacterIdPortraitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? characterId = null;
            //string datasource = null;
            //var response = instance.GetCharactersCharacterIdPortrait(characterId, datasource);
            //Assert.IsInstanceOf<GetCharactersCharacterIdPortraitOk> (response, "response is GetCharactersCharacterIdPortraitOk");
        }
        
        /// <summary>
        /// Test GetCharactersNames
        /// </summary>
        [Test]
        public void GetCharactersNamesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<long?> characterIds = null;
            //string datasource = null;
            //var response = instance.GetCharactersNames(characterIds, datasource);
            //Assert.IsInstanceOf<List<GetCharactersNames200Ok>> (response, "response is List<GetCharactersNames200Ok>");
        }
        
        /// <summary>
        /// Test PostCharactersCharacterIdCspa
        /// </summary>
        [Test]
        public void PostCharactersCharacterIdCspaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? characterId = null;
            //PostCharactersCharacterIdCspaCharacters characters = null;
            //string datasource = null;
            //var response = instance.PostCharactersCharacterIdCspa(characterId, characters, datasource);
            //Assert.IsInstanceOf<PostCharactersCharacterIdCspaCreated> (response, "response is PostCharactersCharacterIdCspaCreated");
        }
        
    }

}
