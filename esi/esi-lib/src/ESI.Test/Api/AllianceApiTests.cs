/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.3.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ESI.Client;
using ESI.Api;
using ESI.Model;

namespace ESI.Test
{
    /// <summary>
    ///  Class for testing AllianceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AllianceApiTests
    {
        private AllianceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AllianceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AllianceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AllianceApi
            //Assert.IsInstanceOfType(typeof(AllianceApi), instance, "instance is a AllianceApi");
        }

        
        /// <summary>
        /// Test GetAlliances
        /// </summary>
        [Test]
        public void GetAlliancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasource = null;
            //var response = instance.GetAlliances(datasource);
            //Assert.IsInstanceOf<List<int?>> (response, "response is List<int?>");
        }
        
        /// <summary>
        /// Test GetAlliancesAllianceId
        /// </summary>
        [Test]
        public void GetAlliancesAllianceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? allianceId = null;
            //string datasource = null;
            //var response = instance.GetAlliancesAllianceId(allianceId, datasource);
            //Assert.IsInstanceOf<GetAlliancesAllianceIdOk> (response, "response is GetAlliancesAllianceIdOk");
        }
        
        /// <summary>
        /// Test GetAlliancesAllianceIdCorporations
        /// </summary>
        [Test]
        public void GetAlliancesAllianceIdCorporationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? allianceId = null;
            //string datasource = null;
            //var response = instance.GetAlliancesAllianceIdCorporations(allianceId, datasource);
            //Assert.IsInstanceOf<List<int?>> (response, "response is List<int?>");
        }
        
        /// <summary>
        /// Test GetAlliancesAllianceIdIcons
        /// </summary>
        [Test]
        public void GetAlliancesAllianceIdIconsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? allianceId = null;
            //string datasource = null;
            //var response = instance.GetAlliancesAllianceIdIcons(allianceId, datasource);
            //Assert.IsInstanceOf<GetAlliancesAllianceIdIconsOk> (response, "response is GetAlliancesAllianceIdIconsOk");
        }
        
        /// <summary>
        /// Test GetAlliancesNames
        /// </summary>
        [Test]
        public void GetAlliancesNamesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<long?> allianceIds = null;
            //string datasource = null;
            //var response = instance.GetAlliancesNames(allianceIds, datasource);
            //Assert.IsInstanceOf<List<GetAlliancesNames200Ok>> (response, "response is List<GetAlliancesNames200Ok>");
        }
        
    }

}
