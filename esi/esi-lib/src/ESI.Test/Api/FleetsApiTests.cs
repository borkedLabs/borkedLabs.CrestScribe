/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.3.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ESI.Client;
using ESI.Api;
using ESI.Model;

namespace ESI.Test
{
    /// <summary>
    ///  Class for testing FleetsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FleetsApiTests
    {
        private FleetsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FleetsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FleetsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FleetsApi
            //Assert.IsInstanceOfType(typeof(FleetsApi), instance, "instance is a FleetsApi");
        }

        
        /// <summary>
        /// Test DeleteFleetsFleetIdMembersMemberId
        /// </summary>
        [Test]
        public void DeleteFleetsFleetIdMembersMemberIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //int? memberId = null;
            //string datasource = null;
            //instance.DeleteFleetsFleetIdMembersMemberId(fleetId, memberId, datasource);
            
        }
        
        /// <summary>
        /// Test DeleteFleetsFleetIdSquadsSquadId
        /// </summary>
        [Test]
        public void DeleteFleetsFleetIdSquadsSquadIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //long? squadId = null;
            //string datasource = null;
            //instance.DeleteFleetsFleetIdSquadsSquadId(fleetId, squadId, datasource);
            
        }
        
        /// <summary>
        /// Test DeleteFleetsFleetIdWingsWingId
        /// </summary>
        [Test]
        public void DeleteFleetsFleetIdWingsWingIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //long? wingId = null;
            //string datasource = null;
            //instance.DeleteFleetsFleetIdWingsWingId(fleetId, wingId, datasource);
            
        }
        
        /// <summary>
        /// Test GetFleetsFleetId
        /// </summary>
        [Test]
        public void GetFleetsFleetIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //string datasource = null;
            //var response = instance.GetFleetsFleetId(fleetId, datasource);
            //Assert.IsInstanceOf<GetFleetsFleetIdOk> (response, "response is GetFleetsFleetIdOk");
        }
        
        /// <summary>
        /// Test GetFleetsFleetIdMembers
        /// </summary>
        [Test]
        public void GetFleetsFleetIdMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //string language = null;
            //string datasource = null;
            //var response = instance.GetFleetsFleetIdMembers(fleetId, language, datasource);
            //Assert.IsInstanceOf<List<GetFleetsFleetIdMembers200Ok>> (response, "response is List<GetFleetsFleetIdMembers200Ok>");
        }
        
        /// <summary>
        /// Test GetFleetsFleetIdWings
        /// </summary>
        [Test]
        public void GetFleetsFleetIdWingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //string language = null;
            //string datasource = null;
            //var response = instance.GetFleetsFleetIdWings(fleetId, language, datasource);
            //Assert.IsInstanceOf<List<GetFleetsFleetIdWings200Ok>> (response, "response is List<GetFleetsFleetIdWings200Ok>");
        }
        
        /// <summary>
        /// Test PostFleetsFleetIdMembers
        /// </summary>
        [Test]
        public void PostFleetsFleetIdMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //PostFleetsFleetIdMembersInvitation invitation = null;
            //string datasource = null;
            //instance.PostFleetsFleetIdMembers(fleetId, invitation, datasource);
            
        }
        
        /// <summary>
        /// Test PostFleetsFleetIdWings
        /// </summary>
        [Test]
        public void PostFleetsFleetIdWingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //string datasource = null;
            //var response = instance.PostFleetsFleetIdWings(fleetId, datasource);
            //Assert.IsInstanceOf<PostFleetsFleetIdWingsCreated> (response, "response is PostFleetsFleetIdWingsCreated");
        }
        
        /// <summary>
        /// Test PostFleetsFleetIdWingsWingIdSquads
        /// </summary>
        [Test]
        public void PostFleetsFleetIdWingsWingIdSquadsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //long? wingId = null;
            //string datasource = null;
            //var response = instance.PostFleetsFleetIdWingsWingIdSquads(fleetId, wingId, datasource);
            //Assert.IsInstanceOf<PostFleetsFleetIdWingsWingIdSquadsCreated> (response, "response is PostFleetsFleetIdWingsWingIdSquadsCreated");
        }
        
        /// <summary>
        /// Test PutFleetsFleetId
        /// </summary>
        [Test]
        public void PutFleetsFleetIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //PutFleetsFleetIdNewSettings newSettings = null;
            //string datasource = null;
            //instance.PutFleetsFleetId(fleetId, newSettings, datasource);
            
        }
        
        /// <summary>
        /// Test PutFleetsFleetIdMembersMemberId
        /// </summary>
        [Test]
        public void PutFleetsFleetIdMembersMemberIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //int? memberId = null;
            //PutFleetsFleetIdMembersMemberIdMovement movement = null;
            //string datasource = null;
            //instance.PutFleetsFleetIdMembersMemberId(fleetId, memberId, movement, datasource);
            
        }
        
        /// <summary>
        /// Test PutFleetsFleetIdSquadsSquadId
        /// </summary>
        [Test]
        public void PutFleetsFleetIdSquadsSquadIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //long? squadId = null;
            //PutFleetsFleetIdSquadsSquadIdNaming naming = null;
            //string datasource = null;
            //instance.PutFleetsFleetIdSquadsSquadId(fleetId, squadId, naming, datasource);
            
        }
        
        /// <summary>
        /// Test PutFleetsFleetIdWingsWingId
        /// </summary>
        [Test]
        public void PutFleetsFleetIdWingsWingIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? fleetId = null;
            //long? wingId = null;
            //PutFleetsFleetIdWingsWingIdNaming naming = null;
            //string datasource = null;
            //instance.PutFleetsFleetIdWingsWingId(fleetId, wingId, naming, datasource);
            
        }
        
    }

}
